// Code generated by gowsdl DO NOT EDIT.

package myservice

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type RPOInfo struct {
	XMLName xml.Name `xml:"http://webservices.kazpost.kz/NewHybridMail/schema RPOInfo"`

	PackageCode string `xml:"PackageCode,omitempty" json:"PackageCode,omitempty"`

	SenderID int32 `xml:"SenderID,omitempty" json:"SenderID,omitempty"`

	SenderPass string `xml:"SenderPass,omitempty" json:"SenderPass,omitempty"`

	DocumentID string `xml:"DocumentID,omitempty" json:"DocumentID,omitempty"`

	F1 string `xml:"F1,omitempty" json:"F1,omitempty"`

	F2 string `xml:"F2,omitempty" json:"F2,omitempty"`

	F3 string `xml:"F3,omitempty" json:"F3,omitempty"`

	F4 string `xml:"F4,omitempty" json:"F4,omitempty"`

	F5 string `xml:"F5,omitempty" json:"F5,omitempty"`

	F6 string `xml:"F6,omitempty" json:"F6,omitempty"`

	F7 string `xml:"F7,omitempty" json:"F7,omitempty"`

	F8 string `xml:"F8,omitempty" json:"F8,omitempty"`

	F9 string `xml:"F9,omitempty" json:"F9,omitempty"`

	F10 string `xml:"F10,omitempty" json:"F10,omitempty"`

	F11 string `xml:"F11,omitempty" json:"F11,omitempty"`

	F12 string `xml:"F12,omitempty" json:"F12,omitempty"`

	F13 string `xml:"F13,omitempty" json:"F13,omitempty"`

	F14 string `xml:"F14,omitempty" json:"F14,omitempty"`

	F15 string `xml:"F15,omitempty" json:"F15,omitempty"`

	F16 string `xml:"F16,omitempty" json:"F16,omitempty"`

	F17 string `xml:"F17,omitempty" json:"F17,omitempty"`

	F18 string `xml:"F18,omitempty" json:"F18,omitempty"`

	F19 string `xml:"F19,omitempty" json:"F19,omitempty"`

	F20 string `xml:"F20,omitempty" json:"F20,omitempty"`

	F21 string `xml:"F21,omitempty" json:"F21,omitempty"`

	F22 string `xml:"F22,omitempty" json:"F22,omitempty"`

	F23 string `xml:"F23,omitempty" json:"F23,omitempty"`

	F24 string `xml:"F24,omitempty" json:"F24,omitempty"`

	F25 string `xml:"F25,omitempty" json:"F25,omitempty"`

	FileAttachment string `xml:"FileAttachment,omitempty" json:"FileAttachment,omitempty"`

	PageCount int32 `xml:"PageCount,omitempty" json:"PageCount,omitempty"`
}

type ResponseInfo struct {
	XMLName xml.Name `xml:"http://webservices.kazpost.kz/NewHybridMail/schema ResponseInfo"`

	ResponseMsg string `xml:"ResponseMsg,omitempty" json:"ResponseMsg,omitempty"`

	ResponseKpstID string `xml:"ResponseKpstID,omitempty" json:"ResponseKpstID,omitempty"`

	ResponseTime soap.XSDDateTime `xml:"ResponseTime,omitempty" json:"ResponseTime,omitempty"`
}

type SendRPORequest struct {
	XMLName xml.Name `xml:"http://webservices.kazpost.kz/NewHybridMail/schema SendRPORequest"`

	RPOInfo *RPOInfo `xml:"RPOInfo,omitempty" json:"RPOInfo,omitempty"`
}

type SendRPOResponse struct {
	XMLName xml.Name `xml:"http://webservices.kazpost.kz/NewHybridMail/schema SendRPOResponse"`

	ResponseInfo *ResponseInfo `xml:"ResponseInfo,omitempty" json:"ResponseInfo,omitempty"`
}

type HybridMail interface {
	SendRPO(request *SendRPORequest) (*SendRPOResponse, error)

	SendRPOContext(ctx context.Context, request *SendRPORequest) (*SendRPOResponse, error)
}

type hybridMail struct {
	client *soap.Client
}

func NewHybridMail(client *soap.Client) HybridMail {
	return &hybridMail{
		client: client,
	}
}

func (service *hybridMail) SendRPOContext(ctx context.Context, request *SendRPORequest) (*SendRPOResponse, error) {
	response := new(SendRPOResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *hybridMail) SendRPO(request *SendRPORequest) (*SendRPOResponse, error) {
	return service.SendRPOContext(
		context.Background(),
		request,
	)
}

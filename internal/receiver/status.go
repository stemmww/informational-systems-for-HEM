package receiver

import (
	"encoding/xml"
	"fmt"
	"net/http"

	"github.com/gin-gonic/gin"
)

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ SOAP-–æ–±—ë—Ä—Ç–∫–∏
type Envelope struct {
	XMLName xml.Name     `xml:"Envelope"`
	Body    EnvelopeBody `xml:"Body"`
}

type EnvelopeBody struct {
	Status KazpostStatus `xml:"SendStatus"`
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç –ì–≠–ü
type KazpostStatus struct {
	XMLName      xml.Name `xml:"KazpostStatus"`
	ID           string   `xml:"id"`
	Barcode      string   `xml:"barcode"`
	Date         string   `xml:"date"`
	Status       string   `xml:"status"`
	Operator     string   `xml:"operator"`
	Recipient    string   `xml:"recipient"`
	ReturnReason string   `xml:"returnReason"`
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ì–≠–ü
func ReceiveStatus(c *gin.Context) {
	var env Envelope

	if err := c.ShouldBindXML(&env); err != nil {
		fmt.Println("‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ XML:", err)
		c.String(http.StatusBadRequest, "–û—à–∏–±–∫–∞ XML")
		return
	}

	fmt.Println("üì• –ü–æ–ª—É—á–µ–Ω —Å—Ç–∞—Ç—É—Å –æ—Ç –ì–≠–ü:")
	fmt.Printf("%+v\n", env.Body.Status)

	c.Header("Content-Type", "application/xml")
	c.String(http.StatusOK, `<ACCEPT>1</ACCEPT>`)
}

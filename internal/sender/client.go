package sender

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"fmt"
	"log"
	"net/http"
	"os"

	"github.com/pdfcpu/pdfcpu/pkg/api"
	"github.com/tiaguinho/gosoap"
)

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–æ–≥–æ –ø–æ WSDL
type RPOInfo struct {
	XMLName        xml.Name `xml:"RPOInfo"`
	PackageCode    string   `xml:"PackageCode"`
	SenderID       int      `xml:"SenderID"`
	SenderPass     string   `xml:"SenderPass"`
	DocumentID     string   `xml:"DocumentID"`
	F1             string   `xml:"F1"`
	F2             string   `xml:"F2"`
	F3             string   `xml:"F3"`
	F4             string   `xml:"F4"`
	F5             string   `xml:"F5"`
	F6             string   `xml:"F6"`
	F7             string   `xml:"F7,omitempty"`
	F25            string   `xml:"F25,omitempty"`
	PageCount      int      `xml:"PageCount"`
	FileAttachment string   `xml:"FileAttachment"`
}

func SendTestMessage() error {
	endpoint := "http://localhost:8082/status" // –≤—Ä–µ–º–µ–Ω–Ω—ã–π SOAP

	// –°–æ–∑–¥–∞–µ—Ç SOAP-–∫–ª–∏–µ–Ω—Ç
	client, err := gosoap.SoapClient(endpoint, http.DefaultClient)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è SOAP –∫–ª–∏–µ–Ω—Ç–∞: %v", err)
	}

	// –ß–∏—Ç–∞–µ—Ç PDF
	pdfBytes, err := os.ReadFile("test.pdf")
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è PDF: %v", err)
	}
	pdfBase64 := base64.StdEncoding.EncodeToString(pdfBytes)

	pageCount, err := api.PageCount(bytes.NewReader(pdfBytes), nil)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü PDF: %v", err)
	}

	// –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É RPOInfo
	data := RPOInfo{
		PackageCode:    "UUID-123",
		SenderID:       123,
		SenderPass:     "password",
		DocumentID:     "DOC-456",
		F1:             "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω",
		F2:             "—É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 10",
		F3:             "–ê–ª–º–∞—Ç—ã",
		F4:             "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è",
		F5:             "050000",
		F6:             "–û–û–û –†–æ–º–∞—à–∫–∞",
		F7:             "—É–ª. –õ–µ–Ω–∏–Ω–∞, 5",
		F25:            "R200",
		PageCount:      pageCount,
		FileAttachment: pdfBase64,
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç XML
	xmlPreview, _ := xml.MarshalIndent(data, "", "  ")
	fmt.Println("üßæ XML Body:")
	fmt.Println(string(xmlPreview))

	// –û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ Params
	params := gosoap.Params{
		"RPOInfo": data,
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ SOAP
	res, err := client.Call("SendRPO", params)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ SOAP: %v", err)
	}

	log.Printf("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–∏—Å–∞: %+v", res)
	return nil
}
